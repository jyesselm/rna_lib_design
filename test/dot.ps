%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Tue Dec 15 15:21:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (dot.ps)
} def

/sequence { (\
GGAAGAUCGAGUAGAUCAAACAGUCGAUAUGGAUAGAGUAAGAGAGAUGGAAGUCUCAGGGGAAACUUUGAGAUGGACGGUUUACAAGUUGUCCUAAGUCGACUGAAAGAAACAACAACAACAAC,\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.012976396 ubox
1 17 0.008915419 ubox
2 7 0.007622122 ubox
2 8 0.015400004 ubox
2 16 0.006129362 ubox
2 17 0.015106394 ubox
3 7 0.013429089 ubox
3 16 0.013508378 ubox
5 17 0.996013563 ubox
6 12 0.003291276 ubox
6 16 0.997120765 ubox
7 15 0.997480258 ubox
7 110 0.004155807 ubox
8 14 0.997580851 ubox
8 109 0.004437002 ubox
9 17 0.025525711 ubox
10 16 0.025303631 ubox
11 113 0.024562401 ubox
11 116 0.020040822 ubox
11 119 0.003538716 ubox
12 112 0.024295729 ubox
12 115 0.019502158 ubox
12 118 0.003426865 ubox
16 110 0.044054690 ubox
17 109 0.047858157 ubox
21 105 0.994987382 ubox
22 104 0.999266773 ubox
23 103 0.999973595 ubox
24 102 0.999870799 ubox
25 101 0.999969542 ubox
26 100 0.999941258 ubox
27 99 0.997641554 ubox
28 96 0.101985377 ubox
28 98 0.941143142 ubox
29 39 0.004672991 ubox
29 95 0.148324045 ubox
29 99 0.004548207 ubox
30 38 0.004754042 ubox
30 40 0.003270319 ubox
30 96 0.507738812 ubox
30 98 0.008175446 ubox
31 39 0.003537302 ubox
31 94 0.991631510 ubox
31 95 0.117890834 ubox
32 93 0.995732320 ubox
32 94 0.085639393 ubox
33 39 0.003286325 ubox
33 92 0.998730032 ubox
34 91 0.997128716 ubox
35 90 0.989774428 ubox
36 89 0.949213099 ubox
36 90 0.058480766 ubox
36 93 0.012897584 ubox
37 89 0.096854288 ubox
37 90 0.020403745 ubox
37 92 0.012862639 ubox
38 48 0.003439546 ubox
38 85 0.752195166 ubox
38 89 0.030851385 ubox
39 47 0.003656351 ubox
39 84 0.754220057 ubox
39 88 0.050266083 ubox
39 91 0.009687439 ubox
40 82 0.012317285 ubox
40 83 0.728978723 ubox
40 90 0.013408495 ubox
41 81 0.014378049 ubox
41 82 0.666729653 ubox
41 83 0.092647040 ubox
41 89 0.016308743 ubox
42 81 0.527899160 ubox
42 82 0.117966534 ubox
42 83 0.193011182 ubox
42 89 0.005119960 ubox
43 81 0.126376692 ubox
43 82 0.205119755 ubox
43 83 0.406362720 ubox
44 57 0.007666110 ubox
44 81 0.190948767 ubox
44 82 0.438298314 ubox
44 83 0.240003195 ubox
45 54 0.003219619 ubox
45 56 0.007991350 ubox
45 81 0.438299232 ubox
45 82 0.268359790 ubox
45 83 0.305661881 ubox
46 55 0.008373225 ubox
46 81 0.271651566 ubox
46 82 0.357630101 ubox
46 83 0.013687099 ubox
47 54 0.008619671 ubox
47 74 0.006236485 ubox
47 81 0.375946539 ubox
47 82 0.015443241 ubox
48 53 0.008595939 ubox
48 75 0.089853260 ubox
48 79 0.759382215 ubox
48 80 0.339613606 ubox
48 86 0.004939498 ubox
49 74 0.024293447 ubox
49 78 0.842638308 ubox
49 82 0.003188859 ubox
49 85 0.005080621 ubox
50 81 0.004934823 ubox
50 83 0.003296886 ubox
51 82 0.003634392 ubox
52 81 0.003814491 ubox
53 74 0.992551782 ubox
53 78 0.011165444 ubox
54 73 0.999432582 ubox
54 77 0.009499446 ubox
55 72 0.999907221 ubox
55 76 0.008090134 ubox
56 71 0.999798844 ubox
56 75 0.004974439 ubox
57 70 0.999945997 ubox
58 67 0.006262367 ubox
58 68 0.028124404 ubox
58 69 0.998578313 ubox
59 66 0.009084393 ubox
59 67 0.040087363 ubox
59 68 0.995034077 ubox
59 69 0.004001686 ubox
59 95 0.003615182 ubox
60 66 0.049223482 ubox
60 67 0.997103101 ubox
60 68 0.008498339 ubox
60 94 0.003777679 ubox
61 66 0.997381358 ubox
61 67 0.011470526 ubox
61 93 0.003799525 ubox
61 94 0.003234871 ubox
62 66 0.013388617 ubox
62 93 0.003253749 ubox
64 90 0.005212632 ubox
65 89 0.005670671 ubox
66 88 0.005815371 ubox
67 87 0.005359458 ubox
68 86 0.004610584 ubox
68 87 0.003215939 ubox
69 86 0.004076490 ubox
70 85 0.004675648 ubox
71 83 0.006127669 ubox
72 82 0.006336436 ubox
73 81 0.006529943 ubox
74 80 0.006671158 ubox
74 86 0.003200988 ubox
75 85 0.005305346 ubox
75 94 0.033157438 ubox
76 90 0.005263286 ubox
76 93 0.034784312 ubox
77 89 0.006939483 ubox
77 92 0.034795264 ubox
78 88 0.007405153 ubox
78 91 0.034799283 ubox
79 90 0.034089275 ubox
80 89 0.031559420 ubox
81 87 0.007219974 ubox
81 88 0.019052235 ubox
82 86 0.006193205 ubox
82 87 0.016494732 ubox
84 92 0.003532594 ubox
85 91 0.004135454 ubox
86 90 0.003424277 ubox
104 114 0.004727071 ubox
105 113 0.007866268 ubox
105 116 0.005243166 ubox
105 119 0.004110395 ubox
105 122 0.003494627 ubox
5 17 0.9500000 lbox
6 16 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
21 105 0.9500000 lbox
22 104 0.9500000 lbox
23 103 0.9500000 lbox
24 102 0.9500000 lbox
25 101 0.9500000 lbox
26 100 0.9500000 lbox
27 99 0.9500000 lbox
28 98 0.9500000 lbox
31 94 0.9500000 lbox
32 93 0.9500000 lbox
33 92 0.9500000 lbox
34 91 0.9500000 lbox
35 90 0.9500000 lbox
36 89 0.9500000 lbox
38 85 0.9500000 lbox
39 84 0.9500000 lbox
40 83 0.9500000 lbox
41 82 0.9500000 lbox
42 81 0.9500000 lbox
53 74 0.9500000 lbox
54 73 0.9500000 lbox
55 72 0.9500000 lbox
56 71 0.9500000 lbox
57 70 0.9500000 lbox
58 69 0.9500000 lbox
59 68 0.9500000 lbox
60 67 0.9500000 lbox
61 66 0.9500000 lbox
showpage
end
%%EOF
